{"version":3,"sources":["themes/theme.js","Signup.js","Login.js","components/Sidebar/ChatContent.js","components/Sidebar/CurrentUser.js","components/Sidebar/Search.js","components/Sidebar/Sidebar.js","components/Sidebar/SidebarContainer.js","components/Sidebar/Chat.js","components/Sidebar/BadgeAvatar.js","components/ActiveChat/SenderBubble.js","components/ActiveChat/OtherUserBubble.js","components/ActiveChat/ActiveChat.js","components/ActiveChat/Input.js","components/ActiveChat/Header.js","components/ActiveChat/Messages.js","context/socket.js","components/Home.js","components/SnackbarError.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","fontSize","button","textTransform","letterSpacing","fontWeight","overrides","MuiInput","input","palette","primary","main","secondary","Signup","user","register","history","useHistory","useState","formErrorMessage","setFormErrorMessage","handleRegister","event","a","preventDefault","form","currentTarget","formElements","elements","username","value","email","password","confirmPassword","useEffect","id","push","Grid","container","justifyContent","Box","item","Typography","href","to","Button","onSubmit","FormControl","TextField","label","name","type","required","error","inputProps","minLength","FormHelperText","variant","size","Login","login","handleLogin","margin","useStyles","makeStyles","root","display","marginLeft","flexGrow","previewText","color","ChatContent","conversation","classes","otherUser","latestMessageText","className","height","marginTop","alignItems","subContainer","ellipsis","marginRight","opacity","CurrentUser","BadgeAvatar","photoUrl","online","filledInput","background","borderRadius","marginBottom","Search","handleChange","fullWidth","hiddenLabel","FilledInput","onChange","disableUnderline","placeholder","startAdornment","InputAdornment","position","paddingLeft","paddingRight","title","Sidebar","searchTerm","conversations","setActiveChat","filter","includes","map","SidebarContainer","clearSearchedUsers","addSearchedUsers","setSearchTerm","searchUsers","axios","get","data","console","target","boxShadow","cursor","Chat","handleClick","onClick","sidebar","profilePic","width","badge","border","backgroundColor","UserAvatar","Badge","anchorOrigin","horizontal","vertical","overlap","Avatar","alt","src","flexDirection","date","text","padding","bubble","SenderBubble","time","avatar","usernameDate","backgroundImage","OtherUserBubble","chatContainer","ActiveChat","obj","activeConversation","postMessage","find","undefined","messages","userId","conversationId","justifySelf","Input","setText","handleSubmit","reqBody","recipientId","sender","content","statusText","statusDot","Header","Messages","props","message","moment","createdAt","format","senderId","socket","io","window","location","origin","on","log","SocketContext","React","createContext","Home","logout","useContext","setConversations","setActiveConversation","isLoggedIn","setIsLoggedIn","saveMessage","body","post","addNewConvo","useCallback","forEach","convo","addMessageToConversation","newConvo","prev","addOnlineUser","convoCopy","removeOfflineUser","off","isFetching","fetchConversations","handleLogout","component","CssBaseline","users","currentUsers","newState","fakeConvo","emit","sendMessage","snackbar","icon","SnackbarError","setSnackBarOpen","errorMessage","snackBarOpen","Snackbar","open","onClose","action","Fragment","ContentProps","withRouter","setUser","setErrorMessage","credentials","localStorage","setItem","token","response","delete","removeItem","fetchUser","Provider","path","render","exact","interceptors","request","use","config","getItem","headers","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+NAEaA,EAAQC,YAAe,CAClCC,WAAY,CACVC,WAAY,wBACZC,SAAU,GACVC,OAAQ,CACNC,cAAe,OACfC,cAAe,EACfC,WAAY,SAGhBC,UAAW,CACTC,SAAU,CACRC,MAAO,CACLH,WAAY,UAIlBI,QAAS,CACPC,QAAS,CAAEC,KAAM,WACjBC,UAAW,CAAED,KAAM,c,+GCyFRE,EAlGA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChBC,EAAUC,cAEhB,EAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KAEMC,EAAc,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,yDACrBD,EAAME,iBACAC,EAAOH,EAAMI,cACbC,EAAeF,EAAKG,SACpBC,EAAWF,EAAaE,SAASC,MACjCC,EAAQJ,EAAaI,MAAMD,MAC3BE,EAAWL,EAAaK,SAASF,MACjCG,EAAkBN,EAAaM,gBAAgBH,MAEjDE,IAAaC,EATI,wBAUnBb,EAAoB,CAAEa,gBAAiB,yBAVpB,4CAaflB,EAAS,CAAEc,WAAUE,QAAOC,aAbb,4CAAH,sDAoBpB,OAJAE,qBAAU,WACJpB,GAAQA,EAAKqB,IAAInB,EAAQoB,KAAK,WACjC,CAACtB,EAAME,IAGR,cAACqB,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,SACE,eAACC,EAAA,EAAD,WACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAApB,UACE,cAACC,EAAA,EAAD,8BACA,cAAC,IAAD,CAAMC,KAAK,SAASC,GAAG,SAAvB,SACE,cAACC,EAAA,EAAD,yBAGJ,sBAAMC,SAAUzB,EAAhB,SACE,eAACgB,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE,aAAW,WACXC,MAAM,WACNC,KAAK,WACLC,KAAK,OACLC,UAAQ,QAId,cAACf,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,iBACN,aAAW,iBACXE,KAAK,QACLD,KAAK,QACLE,UAAQ,QAId,cAACf,EAAA,EAAD,UACE,eAACU,EAAA,EAAD,CAAaM,QAASlC,EAAiBc,gBAAvC,UACE,cAACe,EAAA,EAAD,CACE,aAAW,WACXC,MAAM,WACNE,KAAK,WACLG,WAAY,CAAEC,UAAW,GACzBL,KAAK,WACLE,UAAQ,IAEV,cAACI,EAAA,EAAD,UACGrC,EAAiBc,uBAIxB,cAACI,EAAA,EAAD,UACE,eAACU,EAAA,EAAD,CAAaM,QAASlC,EAAiBc,gBAAvC,UACE,cAACe,EAAA,EAAD,CACEC,MAAM,mBACN,aAAW,mBACXE,KAAK,WACLG,WAAY,CAAEC,UAAW,GACzBL,KAAK,kBACLE,UAAQ,IAEV,cAACI,EAAA,EAAD,UACGrC,EAAiBc,uBAIxB,cAACY,EAAA,EAAD,CAAQM,KAAK,SAASM,QAAQ,YAAYC,KAAK,QAA/C,+BC/BGC,EA1DD,SAAC,GAAqB,IAAnB7C,EAAkB,EAAlBA,KAAM8C,EAAY,EAAZA,MACf5C,EAAUC,cAEV4C,EAAW,uCAAG,WAAOvC,GAAP,qBAAAC,EAAA,6DAClBD,EAAME,iBACAC,EAAOH,EAAMI,cACbC,EAAeF,EAAKG,SACpBC,EAAWF,EAAaE,SAASC,MACjCE,EAAWL,EAAaK,SAASF,MALrB,SAOZ8B,EAAM,CAAE/B,WAAUG,aAPN,2CAAH,sDAcjB,OAJAE,qBAAU,WACJpB,GAAQA,EAAKqB,IAAInB,EAAQoB,KAAK,WACjC,CAACtB,EAAME,IAGR,cAACqB,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,SACE,eAACC,EAAA,EAAD,WACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAApB,UACE,cAACC,EAAA,EAAD,gCACA,cAAC,IAAD,CAAMC,KAAK,YAAYC,GAAG,YAA1B,SACE,cAACC,EAAA,EAAD,4BAGJ,sBAAMC,SAAUe,EAAhB,SACE,eAACxB,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,CAAae,OAAO,SAASV,UAAQ,EAArC,SACE,cAACJ,EAAA,EAAD,CACE,aAAW,WACXC,MAAM,WACNC,KAAK,WACLC,KAAK,aAIX,cAACJ,EAAA,EAAD,CAAae,OAAO,SAASV,UAAQ,EAArC,SACE,cAACJ,EAAA,EAAD,CACEC,MAAM,WACN,aAAW,WACXE,KAAK,WACLD,KAAK,eAGT,cAACb,EAAA,EAAD,UACE,cAACQ,EAAA,EAAD,CAAQM,KAAK,SAASM,QAAQ,YAAYC,KAAK,QAA/C,gC,0BCtDRK,EAAYC,aAAW,SAACnE,GAAD,MAAY,CACvCoE,KAAM,CACJC,QAAS,OACT3B,eAAgB,gBAChB4B,WAAY,GACZC,SAAU,GAEZvC,SAAU,CACRxB,WAAY,OACZD,eAAgB,IAElBiE,YAAa,CACXpE,SAAU,GACVqE,MAAO,UACPlE,eAAgB,SAwBLmE,EApBK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACfC,EAAUV,IAERW,EAAcF,EAAdE,UACFC,EAAoBH,EAAarC,IAAMqC,EAAaG,kBAE1D,OACE,cAACnC,EAAA,EAAD,CAAKoC,UAAWH,EAAQR,KAAxB,SACE,eAACzB,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CAAYkC,UAAWH,EAAQ5C,SAA/B,SACG6C,EAAU7C,WAEb,cAACa,EAAA,EAAD,CAAYkC,UAAWH,EAAQJ,YAA/B,SACGM,U,iBC7BLZ,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJY,OAAQ,GACRC,UAAW,GACXX,WAAY,EACZD,QAAS,OACTa,WAAY,UAEdC,aAAc,CACZd,QAAS,OACT3B,eAAgB,gBAChBwC,WAAY,SACZX,SAAU,GAEZvC,SAAU,CACRzB,eAAgB,IAChBH,SAAU,GACVI,WAAY,OACZ8D,WAAY,IAEdc,SAAU,CACRX,MAAO,UACPY,YAAa,GACbC,QAAS,QAkBEC,EAdK,SAAC,GAAc,IAAZtE,EAAW,EAAXA,KACf2D,EAAUV,IAEhB,OACE,eAACvB,EAAA,EAAD,CAAKoC,UAAWH,EAAQR,KAAxB,UACE,cAACoB,EAAD,CAAaC,SAAQ,OAAExE,QAAF,IAAEA,OAAF,EAAEA,EAAMwE,SAAUC,QAAQ,IAC/C,eAAC/C,EAAA,EAAD,CAAKoC,UAAWH,EAAQO,aAAxB,UACE,cAACtC,EAAA,EAAD,CAAYkC,UAAWH,EAAQ5C,SAA/B,gBAA0Cf,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAMe,WAChD,cAAC,IAAD,CAAe4C,QAAS,CAAER,KAAMQ,EAAQQ,mB,oCCpC1ClB,EAAYC,aAAW,iBAAO,CAClCwB,YAAa,CACXX,OAAQ,GACRY,WAAY,UACZC,aAAc,EACdzF,SAAU,GACVI,WAAY,OACZiE,MAAO,UACPlE,cAAe,EACf8D,QAAS,OACT3B,eAAgB,SAChBoD,aAAc,IAEhBnF,MAAO,CACL,iBAAkB,CAChB8D,MAAO,UACPa,QAAS,QAgCAS,EA3BA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACVpB,EAAUV,IAMhB,OACE,sBAAMjB,SALa,SAACxB,GACpBA,EAAME,kBAIN,SACE,cAACuB,EAAA,EAAD,CAAa+C,WAAS,EAACC,aAAW,EAAlC,SACE,cAACC,EAAA,EAAD,CACE9C,KAAK,SACL+C,SAAUJ,EACVpB,QAAS,CAAER,KAAMQ,EAAQe,YAAahF,MAAOiE,EAAQjE,OACrD0F,kBAAgB,EAChBC,YAAY,SACZC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAAC,IAAD,aCvCRvC,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJsC,YAAa,GACbC,aAAc,GACdpC,SAAU,GAEZqC,MAAO,CACLxG,SAAU,GACVG,eAAgB,IAChBC,WAAY,OACZyE,UAAW,GACXa,aAAc,QAmCHe,EA/BC,SAAC,GAMV,IALLb,EAKI,EALJA,aACAc,EAII,EAJJA,WAII,IAHJC,qBAGI,MAHY,GAGZ,EAFJ9F,EAEI,EAFJA,KACA+F,EACI,EADJA,cAEMpC,EAAUV,IAEhB,OACE,eAACvB,EAAA,EAAD,CAAKoC,UAAWH,EAAQR,KAAxB,UACE,cAAC,EAAD,CAAanD,KAAMA,IACnB,cAAC4B,EAAA,EAAD,CAAYkC,UAAWH,EAAQgC,MAA/B,mBACA,cAAC,EAAD,CAAQZ,aAAcA,IACrBe,EACEE,QAAO,SAACtC,GAAD,OACNA,EAAaE,UAAU7C,SAASkF,SAASJ,MAE1CK,KAAI,SAACxC,GACJ,OACE,cAAC,EAAD,CACEA,aAAcA,EAEdqC,cAAeA,GADVrC,EAAaE,UAAU7C,iBCO3BoF,EA7CU,SAAC,GAMnB,IALLL,EAKI,EALJA,cACA9F,EAII,EAJJA,KACAoG,EAGI,EAHJA,mBACAC,EAEI,EAFJA,iBACAN,EACI,EADJA,cAEA,EAAoC3F,mBAAS,IAA7C,mBAAOyF,EAAP,KAAmBS,EAAnB,KAEMC,EAAW,uCAAG,WAAOV,GAAP,iBAAApF,EAAA,+EAEO+F,IAAMC,IAAN,qBAAwBZ,IAF/B,gBAERa,EAFQ,EAERA,KACRL,EAAiBK,GAHD,gDAKhBC,QAAQpE,MAAR,MALgB,yDAAH,sDASXwC,EAAY,uCAAG,WAAOvE,GAAP,SAAAC,EAAA,yDACQ,KAAvBD,EAAMoG,OAAO5F,MADE,uBAGjBoF,IACAE,EAAc,IAJG,8BAOfT,EAAWI,SAASzF,EAAMoG,OAAO5F,OAPlB,uBASjBsF,EAAc9F,EAAMoG,OAAO5F,OATV,0CAYbuF,EAAY/F,EAAMoG,OAAO5F,OAZZ,OAanBsF,EAAc9F,EAAMoG,OAAO5F,OAbR,4CAAH,sDAgBlB,OACE,cAAC,EAAD,CACE+D,aAAcA,EACdc,WAAYA,EACZC,cAAeA,EACf9F,KAAMA,EACN+F,cAAeA,KCvCf9C,EAAYC,aAAW,SAACnE,GAAD,MAAY,CACvCoE,KAAM,CACJyB,aAAc,EACdb,OAAQ,GACR8C,UAAW,qCACXhC,aAAc,GACdzB,QAAS,OACTa,WAAY,SACZ,UAAW,CACT6C,OAAQ,aA0BCC,EArBF,SAAC,GAAqC,IAAnCrD,EAAkC,EAAlCA,aAAcqC,EAAoB,EAApBA,cACtBpC,EAAUV,IACRW,EAAcF,EAAdE,UAEFoD,EAAW,uCAAG,WAAOtD,GAAP,SAAAjD,EAAA,sEACZsF,EAAcrC,EAAaE,UAAU7C,UADzB,2CAAH,sDAIjB,OACE,eAACW,EAAA,EAAD,CAAKuF,QAAS,kBAAMD,EAAYtD,IAAeI,UAAWH,EAAQR,KAAlE,UACE,cAACoB,EAAD,CACEC,SAAUZ,EAAUY,SACpBzD,SAAU6C,EAAU7C,SACpB0D,OAAQb,EAAUa,OAClByC,SAAS,IAEX,cAAC,EAAD,CAAaxD,aAAcA,Q,kBC9B3BT,EAAYC,aAAW,iBAAO,CAClCiE,WAAY,CACVpD,OAAQ,GACRqD,MAAO,IAETC,MAAO,CACLtD,OAAQ,GACRqD,MAAO,GACPxC,aAAc,MACd0C,OAAQ,kBACRC,gBAAiB,WAEnB9C,OAAQ,CACN8C,gBAAiB,WAEnBL,QAAS,CACP7D,WAAY,QAqBDmE,EAjBI,SAAC,GAA6C,IAA3CN,EAA0C,EAA1CA,QAASnG,EAAiC,EAAjCA,SAAUyD,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC3Cd,EAAUV,IAEhB,OACE,cAACvB,EAAA,EAAD,CAAKoC,UAAWoD,EAAUvD,EAAQuD,QAAU,GAA5C,SACE,cAACO,EAAA,EAAD,CACE9D,QAAS,CAAE0D,MAAM,GAAD,OAAK1D,EAAQ0D,MAAb,YAAsB5C,GAAUd,EAAQc,SACxD9B,QAAQ,MACR+E,aAAc,CAAEC,WAAY,QAASC,SAAU,UAC/CC,QAAQ,WAJV,SAME,cAACC,EAAA,EAAD,CAAQC,IAAKhH,EAAUiH,IAAKxD,EAAUV,UAAWH,EAAQwD,kBChC3DlE,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,QAAS,OACT6E,cAAe,SACfhE,WAAY,YAEdiE,KAAM,CACJ/I,SAAU,GACVqE,MAAO,UACPjE,WAAY,OACZsF,aAAc,GAEhBsD,KAAM,CACJhJ,SAAU,GACVqE,MAAO,UACPlE,eAAgB,GAChB8I,QAAS,EACT7I,WAAY,QAEd8I,OAAQ,CACN1D,WAAY,UACZC,aAAc,wBAiBH0D,GAbM,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMJ,EAAW,EAAXA,KACtBxE,EAAUV,IAEhB,OACE,eAACvB,EAAA,EAAD,CAAKoC,UAAWH,EAAQR,KAAxB,UACE,cAACvB,EAAA,EAAD,CAAYkC,UAAWH,EAAQuE,KAA/B,SAAsCK,IACtC,cAAC7G,EAAA,EAAD,CAAKoC,UAAWH,EAAQ0E,OAAxB,SACE,cAACzG,EAAA,EAAD,CAAYkC,UAAWH,EAAQwE,KAA/B,SAAsCA,UChCxClF,GAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,QAAS,QAEXoF,OAAQ,CACNzE,OAAQ,GACRqD,MAAO,GACPhD,YAAa,GACbJ,UAAW,GAEbyE,aAAc,CACZtJ,SAAU,GACVqE,MAAO,UACPjE,WAAY,OACZsF,aAAc,GAEhBwD,OAAQ,CACNK,gBAAiB,oDACjB9D,aAAc,oBAEhBuD,KAAM,CACJhJ,SAAU,GACVI,WAAY,OACZiE,MAAO,UACPlE,eAAgB,GAChB8I,QAAS,OA0BEO,GAtBS,SAAC,GAA+B,IAA7BR,EAA4B,EAA5BA,KAAMI,EAAsB,EAAtBA,KAAM3E,EAAgB,EAAhBA,UAC/BD,EAAUV,KAEhB,OACE,eAACvB,EAAA,EAAD,CAAKoC,UAAWH,EAAQR,KAAxB,UACE,cAAC2E,EAAA,EAAD,CACEC,IAAKnE,EAAU7C,SACfiH,IAAKpE,EAAUY,SACfV,UAAWH,EAAQ6E,SAErB,eAAC9G,EAAA,EAAD,WACE,eAACE,EAAA,EAAD,CAAYkC,UAAWH,EAAQ8E,aAA/B,UACG7E,EAAU7C,SADb,IACwBwH,KAExB,cAAC7G,EAAA,EAAD,CAAKoC,UAAWH,EAAQ0E,OAAxB,SACE,cAACzG,EAAA,EAAD,CAAYkC,UAAWH,EAAQwE,KAA/B,SAAsCA,aC3C1ClF,GAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,QAAS,OACTE,SAAU,EACV2E,cAAe,UAEjBW,cAAe,CACbvF,WAAY,GACZe,YAAa,GACbhB,QAAS,OACT6E,cAAe,SACf3E,SAAU,EACV7B,eAAgB,qBAqDLoH,GAjDI,SAAC,GAKb,IASmBC,EAbxB9I,EAII,EAJJA,KACA8F,EAGI,EAHJA,cACAiD,EAEI,EAFJA,mBACAC,EACI,EADJA,YAEMrF,EAAUV,KAEVS,EAAeoC,EACjBA,EAAcmD,MACZ,SAACvF,GAAD,OAAkBA,EAAaE,UAAU7C,WAAagI,KAExD,GAMJ,OACE,cAACrH,EAAA,EAAD,CAAKoC,UAAWH,EAAQR,KAAxB,UALsB2F,EAMJpF,EALXoF,IAAQ,SAAcI,IAARJ,GAKcpF,EAAaE,WAC5C,qCACE,cAAC,GAAD,CACE7C,SAAU2C,EAAaE,UAAU7C,SACjC0D,OAAQf,EAAaE,UAAUa,SAAU,IAE3C,cAAC/C,EAAA,EAAD,CAAKoC,UAAWH,EAAQiF,cAAxB,SACG5I,GACC,qCACE,cAAC,GAAD,CACEmJ,SAAUzF,EAAayF,SACvBvF,UAAWF,EAAaE,UACxBwF,OAAQpJ,EAAKqB,KAEf,cAAC,GAAD,CACEuC,UAAWF,EAAaE,UACxByF,eAAgB3F,EAAarC,IAAM,KACnCrB,KAAMA,EACNgJ,YAAaA,gBCvDzB/F,GAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJmG,YAAa,WACbtF,UAAW,IAEbtE,MAAO,CACLqE,OAAQ,GACRwD,gBAAiB,UACjB3C,aAAc,EACdC,aAAc,QA2CH0E,GAvCD,SAAC,GAAsD,IAApD3F,EAAmD,EAAnDA,UAAWyF,EAAwC,EAAxCA,eAAgBrJ,EAAwB,EAAxBA,KAAMgJ,EAAkB,EAAlBA,YAC1CrF,EAAUV,KAChB,EAAwB7C,mBAAS,IAAjC,mBAAO+H,EAAP,KAAaqB,EAAb,KAMMC,EAAY,uCAAG,WAAOjJ,GAAP,mBAAAC,EAAA,6DACnBD,EAAME,iBACAC,EAAOH,EAAMI,cACbC,EAAeF,EAAKG,SAEpB4I,EAAU,CACdvB,KAAMtH,EAAasH,KAAKnH,MACxB2I,YAAa/F,EAAUvC,GACvBgI,iBACAO,OAAQP,EAAiB,KAAOrJ,GATf,SAWbgJ,EAAYU,GAXC,OAYnBF,EAAQ,IAZW,2CAAH,sDAelB,OACE,sBAAM1F,UAAWH,EAAQR,KAAMnB,SAAUyH,EAAzC,SACE,cAACxH,EAAA,EAAD,CAAa+C,WAAS,EAACC,aAAW,EAAlC,SACE,cAACC,EAAA,EAAD,CACEvB,QAAS,CAAER,KAAMQ,EAAQjE,OACzB0F,kBAAgB,EAChBC,YAAY,oBACZrE,MAAOmH,EACP/F,KAAK,OACL+C,SA5Ba,SAAC3E,GACpBgJ,EAAQhJ,EAAMoG,OAAO5F,eCjBnBiC,GAAYC,aAAW,SAACnE,GAAD,MAAY,CACvCoE,KAAM,CACJC,QAAS,OACTa,WAAY,SACZxC,eAAgB,gBAChBsC,OAAQ,GACRc,aAAc,GACdgC,UAAW,sCAEbgD,QAAS,CACPzG,QAAS,OACTa,WAAY,SACZZ,WAAY,IAEdtC,SAAU,CACR5B,SAAU,GACVG,eAAgB,IAChBC,WAAY,OACZ6E,YAAa,IAEf0F,WAAY,CACV3K,SAAU,GACVqE,MAAO,UACPlE,eAAgB,KAElByK,UAAW,CACThG,OAAQ,EACRqD,MAAO,EACPxC,aAAc,MACdR,YAAa,EACbmD,gBAAiB,WAEnB9C,OAAQ,CACNE,WAAY,WAEdR,SAAU,CACRX,MAAO,UACPY,YAAa,GACbC,QAAS,QAqBE2F,GAjBA,SAAC,GAA0B,IAAxBjJ,EAAuB,EAAvBA,SAAU0D,EAAa,EAAbA,OACpBd,EAAUV,KAEhB,OACE,eAACvB,EAAA,EAAD,CAAKoC,UAAWH,EAAQR,KAAxB,UACE,eAACzB,EAAA,EAAD,CAAKoC,UAAWH,EAAQkG,QAAxB,UACE,cAACjI,EAAA,EAAD,CAAYkC,UAAWH,EAAQ5C,SAA/B,SAA0CA,IAC1C,cAACW,EAAA,EAAD,CAAKoC,UAAS,UAAKH,EAAQoG,UAAb,YAA0BtF,GAAUd,EAAQc,UAC1D,cAAC7C,EAAA,EAAD,CAAYkC,UAAWH,EAAQmG,WAA/B,SACGrF,EAAS,SAAW,eAGzB,cAAC,IAAD,CAAed,QAAS,CAAER,KAAMQ,EAAQQ,gB,qBC/B/B8F,GAvBE,SAACC,GAChB,IAAQf,EAAgCe,EAAhCf,SAAUvF,EAAsBsG,EAAtBtG,UAAWwF,EAAWc,EAAXd,OAE7B,OACE,cAAC1H,EAAA,EAAD,UACGyH,EAASjD,KAAI,SAACiE,GACb,IAAM5B,EAAO6B,KAAOD,EAAQE,WAAWC,OAAO,QAE9C,OAAOH,EAAQI,WAAanB,EAC1B,cAAC,GAAD,CAA+BjB,KAAMgC,EAAQhC,KAAMI,KAAMA,GAAtC4B,EAAQ9I,IAE3B,cAAC,GAAD,CAEE8G,KAAMgC,EAAQhC,KACdI,KAAMA,EACN3E,UAAWA,GAHNuG,EAAQ9I,U,UCbZmJ,GAASC,cAAGC,OAAOC,SAASC,QACzCJ,GAAOK,GAAG,WAAW,WACnBlE,QAAQmE,IAAI,0BAEP,IAAMC,GAAgBC,IAAMC,gBCE7BhI,GAAYC,aAAW,SAACnE,GAAD,MAAY,CACvCoE,KAAM,CACJY,OAAQ,aAoNGmH,GAhNF,SAAC,GAAsB,IAApBlL,EAAmB,EAAnBA,KAAMmL,EAAa,EAAbA,OACdjL,EAAUC,cAEVqK,EAASY,qBAAWL,IAE1B,EAA0C3K,mBAAS,IAAnD,mBAAO0F,EAAP,KAAsBuF,EAAtB,KACA,EAAoDjL,mBAAS,MAA7D,mBAAO2I,EAAP,KAA2BuC,EAA3B,KAEM3H,EAAUV,KAChB,EAAoC7C,oBAAS,GAA7C,mBAAOmL,EAAP,KAAmBC,EAAnB,KA0BMC,EAAW,uCAAG,WAAOC,GAAP,iBAAAjL,EAAA,sEACK+F,IAAMmF,KAAK,gBAAiBD,GADjC,uBACVhF,EADU,EACVA,KADU,kBAEXA,GAFW,2CAAH,sDA6BXkF,EAAcC,uBAClB,SAAClC,EAAaQ,GACZrE,EAAcgG,SAAQ,SAACC,GACjBA,EAAMnI,UAAUvC,KAAOsI,IACzBoC,EAAM5C,SAAS7H,KAAK6I,GACpB4B,EAAMlI,kBAAoBsG,EAAQhC,KAClC4D,EAAM1K,GAAK8I,EAAQd,mBAGvBgC,EAAiBvF,KAEnB,CAACuF,EAAkBvF,IAGfkG,EAA2BH,uBAC/B,SAACnF,GAEC,IAAQyD,EAA2BzD,EAA3ByD,QAAR,EAAmCzD,EAAlBkD,cAAjB,MAA0B,KAA1B,EACA,GAAe,OAAXA,EAAiB,CACnB,IAAMqC,EAAW,CACf5K,GAAI8I,EAAQd,eACZzF,UAAWgG,EACXT,SAAU,CAACgB,IAEb8B,EAASpI,kBAAoBsG,EAAQhC,KACrCkD,GAAiB,SAACa,GAAD,OAAWD,GAAX,mBAAwBC,OAG3CpG,EAAcgG,SAAQ,SAACC,GACjBA,EAAM1K,KAAO8I,EAAQd,iBACvB0C,EAAM5C,SAAS7H,KAAK6I,GACpB4B,EAAMlI,kBAAoBsG,EAAQhC,SAGtCkD,EAAiBvF,KAEnB,CAACuF,EAAkBvF,IAOfqG,EAAgBN,uBAAY,SAACxK,GACjCgK,GAAiB,SAACa,GAAD,OACfA,EAAKhG,KAAI,SAAC6F,GACR,GAAIA,EAAMnI,UAAUvC,KAAOA,EAAI,CAC7B,IAAM+K,EAAS,eAAQL,GAEvB,OADAK,EAAUxI,UAAV,2BAA2BwI,EAAUxI,WAArC,IAAgDa,QAAQ,IACjD2H,EAEP,OAAOL,UAIZ,IAEGM,EAAoBR,uBAAY,SAACxK,GACrCgK,GAAiB,SAACa,GAAD,OACfA,EAAKhG,KAAI,SAAC6F,GACR,GAAIA,EAAMnI,UAAUvC,KAAOA,EAAI,CAC7B,IAAM+K,EAAS,eAAQL,GAEvB,OADAK,EAAUxI,UAAV,2BAA2BwI,EAAUxI,WAArC,IAAgDa,QAAQ,IACjD2H,EAEP,OAAOL,UAIZ,IAIH3K,qBAAU,WAMR,OAJAoJ,EAAOK,GAAG,kBAAmBsB,GAC7B3B,EAAOK,GAAG,sBAAuBwB,GACjC7B,EAAOK,GAAG,cAAemB,GAElB,WAGLxB,EAAO8B,IAAI,kBAAmBH,GAC9B3B,EAAO8B,IAAI,sBAAuBD,GAClC7B,EAAO8B,IAAI,cAAeN,MAE3B,CAACA,EAA0BG,EAAeE,EAAmB7B,IAEhEpJ,qBAAU,WAER,OAAIpB,QAAJ,IAAIA,KAAMuM,aAENvM,GAAQA,EAAKqB,GACfmK,GAAc,GAGVD,EAAYrL,EAAQoB,KAAK,UACxBpB,EAAQoB,KAAK,gBAEnB,CAACtB,EAAME,EAASqL,IAEnBnK,qBAAU,WACR,IAAMoL,EAAkB,uCAAG,8BAAA/L,EAAA,+EAEA+F,IAAMC,IAAI,sBAFV,gBAEfC,EAFe,EAEfA,KACR2E,EAAiB3E,GAHM,gDAKvBC,QAAQpE,MAAR,MALuB,yDAAH,qDAQnBvC,EAAKuM,YACRC,MAED,CAACxM,IAEJ,IAAMyM,EAAY,uCAAG,sBAAAhM,EAAA,0DACfT,IAAQA,EAAKqB,GADE,gCAEX8J,EAAOnL,EAAKqB,IAFD,2CAAH,qDAMlB,OACE,qCACE,cAACU,EAAA,EAAD,CAAQkF,QAASwF,EAAjB,oBACA,eAAClL,EAAA,EAAD,CAAMC,WAAS,EAACkL,UAAU,OAAO5I,UAAWH,EAAQR,KAApD,UACE,cAACwJ,EAAA,EAAD,IACA,cAAC,EAAD,CACE7G,cAAeA,EACf9F,KAAMA,EACNoG,mBAlKmB,WACzBiF,GAAiB,SAACa,GAAD,OAAUA,EAAKlG,QAAO,SAAC+F,GAAD,OAAWA,EAAM1K,UAkKlDgF,iBAvLiB,SAACuG,GACxB,IAAMC,EAAe,GAGrB/G,EAAcgG,SAAQ,SAACC,GACrBc,EAAad,EAAMnI,UAAUvC,KAAM,KAGrC,IAAMyL,EAAQ,YAAOhH,GACrB8G,EAAMd,SAAQ,SAAC9L,GAEb,IAAK6M,EAAa7M,EAAKqB,IAAK,CAC1B,IAAI0L,EAAY,CAAEnJ,UAAW5D,EAAMmJ,SAAU,IAC7C2D,EAASxL,KAAKyL,OAIlB1B,EAAiByB,IAuKX/G,cA5Fc,SAAChF,GACrBuK,EAAsBvK,MA6FlB,cAAC,GAAD,CACEgI,mBAAoBA,EACpBjD,cAAeA,EACf9F,KAAMA,EACNgJ,YAzJY,SAAC0C,GACnB,IACE,IAAMhF,EAAO+E,EAAYC,GAEpBA,EAAKrC,eAGR2C,EAAyBtF,GAFzBkF,EAAYF,EAAK/B,YAAajD,EAAKyD,SAbrB,SAACzD,EAAMgF,GACzBlB,EAAOwC,KAAK,cAAe,CACzB7C,QAASzD,EAAKyD,QACdR,YAAa+B,EAAK/B,YAClBC,OAAQlD,EAAKkD,SAcbqD,CAAYvG,EAAMgF,GAClB,MAAOnJ,GACPoE,QAAQpE,MAAMA,c,+BCvEdU,GAAYC,aAAW,SAACnE,GAAD,MAAY,CACvCmO,SAAU,CACR3F,gBAAiB,MACjBhI,WAAY,QAEd4N,KAAM,CACJ3J,MAAO,aA+BI4J,GA3BO,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,gBAAiBC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAChD5J,EAAUV,KAChB,OACE,cAACuK,GAAA,EAAD,CACEC,KAAMF,EACNG,QAAS,kBAAML,GAAgB,IAC/BlD,QAASmD,GAAgB,4CACzBK,OACE,cAAC,IAAMC,SAAP,UACE,cAAC7L,EAAA,EAAD,CACE+B,UAAWH,EAAQwJ,KACnBvK,KAAK,QACLqE,QAAS,kBAAMoG,GAAgB,IAHjC,SAKE,cAAC,KAAD,CAAO7J,MAAM,kBAInBqK,aAAc,CACZlK,QAAS,CACPR,KAAMQ,EAAQuJ,cC4FTY,gBAtHA,SAAC5D,GACd,MAAwB9J,mBAAS,CAC/BmM,YAAY,IADd,mBAAOvM,EAAP,KAAa+N,EAAb,KAIA,EAAwC3N,mBAAS,IAAjD,mBAAOkN,EAAP,KAAqBU,EAArB,KACA,EAAwC5N,oBAAS,GAAjD,mBAAOmN,EAAP,KAAqBF,EAArB,KAEMvK,EAAK,uCAAG,WAAOmL,GAAP,iBAAAxN,EAAA,+EAEa+F,IAAMmF,KAAK,cAAesC,GAFvC,uBAEFvH,EAFE,EAEFA,KAFE,SAGJwH,aAAaC,QAAQ,kBAAmBzH,EAAK0H,OAHzC,OAIVL,EAAQrH,GACR8D,GAAOwC,KAAK,YAAatG,EAAKrF,IALpB,kDAOVsF,QAAQpE,MAAR,MACAwL,EAAQ,CAAExL,MAAO,KAAM8L,SAAS3H,KAAKnE,OAAS,iBARpC,0DAAH,sDAYLtC,EAAQ,uCAAG,WAAOgO,GAAP,iBAAAxN,EAAA,+EAEU+F,IAAMmF,KAAK,iBAAkBsC,GAFvC,uBAELvH,EAFK,EAELA,KAFK,SAGPwH,aAAaC,QAAQ,kBAAmBzH,EAAK0H,OAHtC,OAIbL,EAAQrH,GACR8D,GAAOwC,KAAK,YAAatG,EAAKrF,IALjB,kDAObsF,QAAQpE,MAAR,MACAwL,EAAQ,CAAExL,MAAO,KAAM8L,SAAS3H,KAAKnE,OAAS,iBARjC,0DAAH,sDAYR4I,EAAM,uCAAG,WAAO9J,GAAP,SAAAZ,EAAA,+EAEL+F,IAAM8H,OAAO,gBAFR,uBAGLJ,aAAaK,WAAW,mBAHnB,OAIXR,EAAQ,IACRvD,GAAOwC,KAAK,SAAU3L,GALX,gDAOXsF,QAAQpE,MAAR,MAPW,yDAAH,sDA4CZ,OA/BAnB,qBAAU,WACR,IAAMoN,EAAS,uCAAG,8BAAA/N,EAAA,6DAChBsN,GAAQ,SAAC7B,GAAD,mBAAC,eAAeA,GAAhB,IAAsBK,YAAY,OAD1B,kBAGS/F,IAAMC,IAAI,cAHnB,gBAGNC,EAHM,EAGNA,KACRqH,EAAQrH,GACJA,EAAKrF,IACPmJ,GAAOwC,KAAK,YAAatG,EAAKrF,IANlB,kDASdsF,QAAQpE,MAAR,MATc,yBAWdwL,GAAQ,SAAC7B,GAAD,mBAAC,eAAeA,GAAhB,IAAsBK,YAAY,OAX5B,6EAAH,qDAefiC,MACC,IAEHpN,qBAAU,WACR,OAAIpB,QAAJ,IAAIA,KAAMuC,QAEkB,kBAAfvC,EAAKuC,MACdyL,EAAgBhO,EAAKuC,OAErByL,EAAgB,2CAElBX,GAAgB,MAEjB,QAACrN,QAAD,IAACA,OAAD,EAACA,EAAMuC,QAEV,OAAIvC,QAAJ,IAAIA,KAAMuM,WACD,6CAIP,eAACxB,GAAc0D,SAAf,CAAwBzN,MAAOwJ,GAA/B,UACG+C,GACC,cAAC,GAAD,CACEF,gBAAiBA,EACjBC,aAAcA,EACdC,aAAcA,IAGlB,eAAC,IAAD,WACE,cAAC,IAAD,CACEmB,KAAK,SACLC,OAAQ,kBAAM,cAAC,EAAD,CAAO3O,KAAMA,EAAM8C,MAAOA,OAE1C,cAAC,IAAD,CACE4L,KAAK,YACLC,OAAQ,kBAAM,cAAC,EAAD,CAAQ3O,KAAMA,EAAMC,SAAUA,OAE9C,cAAC,IAAD,CACE2O,OAAK,EACLF,KAAK,IACLC,OAAQ,SAACzE,GAAD,OACF,OAAJlK,QAAI,IAAJA,KAAMqB,GACJ,cAAC,GAAD,CAAMrB,KAAMA,EAAMmL,OAAQA,IAE1B,cAAC,EAAD,CAAQnL,KAAMA,EAAMC,SAAUA,OAIpC,cAAC,IAAD,CACEyO,KAAK,QACLC,OAAQ,kBAAM,cAAC,GAAD,CAAM3O,KAAMA,EAAMmL,OAAQA,gBChHlD3E,IAAMqI,aAAaC,QAAQC,IAA3B,+BAAAtO,EAAA,MAA+B,WAAgBuO,GAAhB,eAAAvO,EAAA,sEACTyN,aAAae,QAAQ,mBADZ,cACvBb,EADuB,OAE7BY,EAAOE,QAAQ,kBAAoBd,EAFN,kBAItBY,GAJsB,2CAA/B,uDAiBeG,OAVf,WACE,OACE,cAAC,IAAD,CAAkBpQ,MAAOA,EAAzB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,SCPYqQ,QACW,cAA7B1E,OAAOC,SAAS0E,UAEe,UAA7B3E,OAAOC,SAAS0E,UAEhB3E,OAAOC,SAAS0E,SAASC,MACvB,2DCZNC,IAASZ,OAAO,cAAC,GAAD,IAASa,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.02117352.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontSize: 14,\n    button: {\n      textTransform: \"none\",\n      letterSpacing: 0,\n      fontWeight: \"bold\"\n    }\n  },\n  overrides: {\n    MuiInput: {\n      input: {\n        fontWeight: \"bold\"\n      }\n    }\n  },\n  palette: {\n    primary: { main: \"#3A8DFF\" },\n    secondary: { main: \"#B0B0B0\" }\n  }\n});\n","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  Grid,\n  Box,\n  Typography,\n  Button,\n  FormControl,\n  TextField,\n  FormHelperText,\n} from '@material-ui/core';\n\nconst Signup = ({ user, register }) => {\n  const history = useHistory();\n\n  const [formErrorMessage, setFormErrorMessage] = useState({});\n\n  const handleRegister = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const formElements = form.elements;\n    const username = formElements.username.value;\n    const email = formElements.email.value;\n    const password = formElements.password.value;\n    const confirmPassword = formElements.confirmPassword.value;\n\n    if (password !== confirmPassword) {\n      setFormErrorMessage({ confirmPassword: 'Passwords must match' });\n      return;\n    }\n    await register({ username, email, password });\n  };\n\n  useEffect(() => {\n    if (user && user.id) history.push('/home');\n  }, [user, history]);\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Box>\n        <Grid container item>\n          <Typography>Need to log in?</Typography>\n          <Link href=\"/login\" to=\"/login\">\n            <Button>Login</Button>\n          </Link>\n        </Grid>\n        <form onSubmit={handleRegister}>\n          <Grid>\n            <Grid>\n              <FormControl>\n                <TextField\n                  aria-label=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid>\n              <FormControl>\n                <TextField\n                  label=\"E-mail address\"\n                  aria-label=\"e-mail address\"\n                  type=\"email\"\n                  name=\"email\"\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid>\n              <FormControl error={!!formErrorMessage.confirmPassword}>\n                <TextField\n                  aria-label=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  inputProps={{ minLength: 6 }}\n                  name=\"password\"\n                  required\n                />\n                <FormHelperText>\n                  {formErrorMessage.confirmPassword}\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n            <Grid>\n              <FormControl error={!!formErrorMessage.confirmPassword}>\n                <TextField\n                  label=\"Confirm Password\"\n                  aria-label=\"confirm password\"\n                  type=\"password\"\n                  inputProps={{ minLength: 6 }}\n                  name=\"confirmPassword\"\n                  required\n                />\n                <FormHelperText>\n                  {formErrorMessage.confirmPassword}\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n            <Button type=\"submit\" variant=\"contained\" size=\"large\">\n              Create\n            </Button>\n          </Grid>\n        </form>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default Signup;\n","import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  Grid,\n  Box,\n  Typography,\n  Button,\n  FormControl,\n  TextField,\n} from '@material-ui/core';\n\nconst Login = ({ user, login }) => {\n  const history = useHistory();\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const formElements = form.elements;\n    const username = formElements.username.value;\n    const password = formElements.password.value;\n\n    await login({ username, password });\n  };\n\n  useEffect(() => {\n    if (user && user.id) history.push('/home');\n  }, [user, history]);\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Box>\n        <Grid container item>\n          <Typography>Need to register?</Typography>\n          <Link href=\"/register\" to=\"/register\">\n            <Button>Register</Button>\n          </Link>\n        </Grid>\n        <form onSubmit={handleLogin}>\n          <Grid>\n            <Grid>\n              <FormControl margin=\"normal\" required>\n                <TextField\n                  aria-label=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                />\n              </FormControl>\n            </Grid>\n            <FormControl margin=\"normal\" required>\n              <TextField\n                label=\"password\"\n                aria-label=\"password\"\n                type=\"password\"\n                name=\"password\"\n              />\n            </FormControl>\n            <Grid>\n              <Button type=\"submit\" variant=\"contained\" size=\"large\">\n                Login\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginLeft: 20,\n    flexGrow: 1,\n  },\n  username: {\n    fontWeight: \"bold\",\n    letterSpacing: -0.2,\n  },\n  previewText: {\n    fontSize: 12,\n    color: \"#9CADC8\",\n    letterSpacing: -0.17,\n  },\n}));\n\nconst ChatContent = ({ conversation }) => {\n  const classes = useStyles();\n\n  const { otherUser } = conversation;\n  const latestMessageText = conversation.id && conversation.latestMessageText;\n\n  return (\n    <Box className={classes.root}>\n      <Box>\n        <Typography className={classes.username}>\n          {otherUser.username}\n        </Typography>\n        <Typography className={classes.previewText}>\n          {latestMessageText}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ChatContent;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { BadgeAvatar } from \"./index\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: 44,\n    marginTop: 23,\n    marginLeft: 6,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  subContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    flexGrow: 1,\n  },\n  username: {\n    letterSpacing: -0.23,\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginLeft: 17,\n  },\n  ellipsis: {\n    color: \"#95A7C4\",\n    marginRight: 24,\n    opacity: 0.5,\n  },\n}));\n\nconst CurrentUser = ({ user }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <BadgeAvatar photoUrl={user?.photoUrl} online={true} />\n      <Box className={classes.subContainer}>\n        <Typography className={classes.username}>{user?.username}</Typography>\n        <MoreHorizIcon classes={{ root: classes.ellipsis }} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default CurrentUser;\n","import React from \"react\";\nimport { FormControl, FilledInput, InputAdornment } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  filledInput: {\n    height: 50,\n    background: \"#E9EEF9\",\n    borderRadius: 5,\n    fontSize: 13,\n    fontWeight: \"bold\",\n    color: \"#99A9C4\",\n    letterSpacing: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: 20,\n  },\n  input: {\n    \"&::placeholder\": {\n      color: \"#ADC0DE\",\n      opacity: 1,\n    },\n  },\n}));\n\nconst Search = ({ handleChange }) => {\n  const classes = useStyles();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl fullWidth hiddenLabel>\n        <FilledInput\n          name=\"search\"\n          onChange={handleChange}\n          classes={{ root: classes.filledInput, input: classes.input }}\n          disableUnderline\n          placeholder=\"Search\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          }\n        ></FilledInput>\n      </FormControl>\n    </form>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Search, Chat, CurrentUser } from './index';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    paddingLeft: 21,\n    paddingRight: 21,\n    flexGrow: 1,\n  },\n  title: {\n    fontSize: 20,\n    letterSpacing: -0.29,\n    fontWeight: 'bold',\n    marginTop: 32,\n    marginBottom: 15,\n  },\n}));\n\nconst Sidebar = ({\n  handleChange,\n  searchTerm,\n  conversations = [],\n  user,\n  setActiveChat,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <CurrentUser user={user} />\n      <Typography className={classes.title}>Chats</Typography>\n      <Search handleChange={handleChange} />\n      {conversations\n        .filter((conversation) =>\n          conversation.otherUser.username.includes(searchTerm)\n        )\n        .map((conversation) => {\n          return (\n            <Chat\n              conversation={conversation}\n              key={conversation.otherUser.username}\n              setActiveChat={setActiveChat}\n            />\n          );\n        })}\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState } from 'react';\nimport { Sidebar } from './index';\nimport axios from 'axios';\n\nconst SidebarContainer = ({\n  conversations,\n  user,\n  clearSearchedUsers,\n  addSearchedUsers,\n  setActiveChat,\n}) => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const searchUsers = async (searchTerm) => {\n    try {\n      const { data } = await axios.get(`/api/users/${searchTerm}`);\n      addSearchedUsers(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = async (event) => {\n    if (event.target.value === '') {\n      // clear searched convos\n      clearSearchedUsers();\n      setSearchTerm('');\n      return;\n    }\n    if (searchTerm.includes(event.target.value)) {\n      // if new value is included in search term, we don't need to make another API call, just need to set the search term value so the conversations can be filtered in the rendering\n      setSearchTerm(event.target.value);\n      return;\n    }\n    await searchUsers(event.target.value);\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <Sidebar\n      handleChange={handleChange}\n      searchTerm={searchTerm}\n      conversations={conversations}\n      user={user}\n      setActiveChat={setActiveChat}\n    />\n  );\n};\n\nexport default SidebarContainer;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { BadgeAvatar, ChatContent } from '../Sidebar';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRadius: 8,\n    height: 80,\n    boxShadow: '0 2px 10px 0 rgba(88,133,196,0.05)',\n    marginBottom: 10,\n    display: 'flex',\n    alignItems: 'center',\n    '&:hover': {\n      cursor: 'grab',\n    },\n  },\n}));\n\nconst Chat = ({ conversation, setActiveChat }) => {\n  const classes = useStyles();\n  const { otherUser } = conversation;\n\n  const handleClick = async (conversation) => {\n    await setActiveChat(conversation.otherUser.username);\n  };\n\n  return (\n    <Box onClick={() => handleClick(conversation)} className={classes.root}>\n      <BadgeAvatar\n        photoUrl={otherUser.photoUrl}\n        username={otherUser.username}\n        online={otherUser.online}\n        sidebar={true}\n      />\n      <ChatContent conversation={conversation} />\n    </Box>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport { Box, Badge, Avatar } from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  profilePic: {\n    height: 44,\n    width: 44,\n  },\n  badge: {\n    height: 13,\n    width: 13,\n    borderRadius: \"50%\",\n    border: \"2px solid white\",\n    backgroundColor: \"#D0DAE9\",\n  },\n  online: {\n    backgroundColor: \"#1CED84\",\n  },\n  sidebar: {\n    marginLeft: 17,\n  },\n}));\n\nconst UserAvatar = ({ sidebar, username, photoUrl, online }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={sidebar ? classes.sidebar : \"\"}>\n      <Badge\n        classes={{ badge: `${classes.badge} ${online && classes.online}` }}\n        variant=\"dot\"\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\n        overlap=\"circular\"\n      >\n        <Avatar alt={username} src={photoUrl} className={classes.profilePic} />\n      </Badge>\n    </Box>\n  );\n};\n\nexport default UserAvatar;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n  date: {\n    fontSize: 11,\n    color: '#BECCE2',\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  text: {\n    fontSize: 14,\n    color: '#91A3C0',\n    letterSpacing: -0.2,\n    padding: 8,\n    fontWeight: 'bold',\n  },\n  bubble: {\n    background: '#F4F6FA',\n    borderRadius: '10px 10px 0 10px',\n  },\n}));\n\nconst SenderBubble = ({ time, text }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Typography className={classes.date}>{time}</Typography>\n      <Box className={classes.bubble}>\n        <Typography className={classes.text}>{text}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SenderBubble;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Typography, Avatar } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n  },\n  avatar: {\n    height: 30,\n    width: 30,\n    marginRight: 11,\n    marginTop: 6,\n  },\n  usernameDate: {\n    fontSize: 11,\n    color: '#BECCE2',\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  bubble: {\n    backgroundImage: 'linear-gradient(225deg, #6CC1FF 0%, #3A8DFF 100%)',\n    borderRadius: '0 10px 10px 10px',\n  },\n  text: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    letterSpacing: -0.2,\n    padding: 8,\n  },\n}));\n\nconst OtherUserBubble = ({ text, time, otherUser }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Avatar\n        alt={otherUser.username}\n        src={otherUser.photoUrl}\n        className={classes.avatar}\n      />\n      <Box>\n        <Typography className={classes.usernameDate}>\n          {otherUser.username} {time}\n        </Typography>\n        <Box className={classes.bubble}>\n          <Typography className={classes.text}>{text}</Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default OtherUserBubble;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nimport { Input, Header, Messages } from './index';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexGrow: 8,\n    flexDirection: 'column',\n  },\n  chatContainer: {\n    marginLeft: 41,\n    marginRight: 41,\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    justifyContent: 'space-between',\n  },\n}));\n\nconst ActiveChat = ({\n  user,\n  conversations,\n  activeConversation,\n  postMessage,\n}) => {\n  const classes = useStyles();\n\n  const conversation = conversations\n    ? conversations.find(\n        (conversation) => conversation.otherUser.username === activeConversation\n      )\n    : {};\n\n  const isConversation = (obj) => {\n    return obj !== {} && obj !== undefined;\n  };\n\n  return (\n    <Box className={classes.root}>\n      {isConversation(conversation) && conversation.otherUser && (\n        <>\n          <Header\n            username={conversation.otherUser.username}\n            online={conversation.otherUser.online || false}\n          />\n          <Box className={classes.chatContainer}>\n            {user && (\n              <>\n                <Messages\n                  messages={conversation.messages}\n                  otherUser={conversation.otherUser}\n                  userId={user.id}\n                />\n                <Input\n                  otherUser={conversation.otherUser}\n                  conversationId={conversation.id || null}\n                  user={user}\n                  postMessage={postMessage}\n                />\n              </>\n            )}\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default ActiveChat;\n","import React, { useState } from 'react';\nimport { FormControl, FilledInput } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    justifySelf: 'flex-end',\n    marginTop: 15,\n  },\n  input: {\n    height: 70,\n    backgroundColor: '#F4F6FA',\n    borderRadius: 8,\n    marginBottom: 20,\n  },\n}));\n\nconst Input = ({ otherUser, conversationId, user, postMessage }) => {\n  const classes = useStyles();\n  const [text, setText] = useState('');\n\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const formElements = form.elements;\n    // add sender user info if posting to a brand new convo, so that the other user will have access to username, profile pic, etc.\n    const reqBody = {\n      text: formElements.text.value,\n      recipientId: otherUser.id,\n      conversationId,\n      sender: conversationId ? null : user,\n    };\n    await postMessage(reqBody);\n    setText('');\n  };\n\n  return (\n    <form className={classes.root} onSubmit={handleSubmit}>\n      <FormControl fullWidth hiddenLabel>\n        <FilledInput\n          classes={{ root: classes.input }}\n          disableUnderline\n          placeholder=\"Type something...\"\n          value={text}\n          name=\"text\"\n          onChange={handleChange}\n        />\n      </FormControl>\n    </form>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Typography } from '@material-ui/core';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    height: 89,\n    marginBottom: 34,\n    boxShadow: '0 2px 20px 0 rgba(88,133,196,0.10)',\n  },\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 24,\n  },\n  username: {\n    fontSize: 20,\n    letterSpacing: -0.29,\n    fontWeight: 'bold',\n    marginRight: 14,\n  },\n  statusText: {\n    fontSize: 12,\n    color: '#BFC9DB',\n    letterSpacing: -0.17,\n  },\n  statusDot: {\n    height: 8,\n    width: 8,\n    borderRadius: '50%',\n    marginRight: 5,\n    backgroundColor: '#D0DAE9',\n  },\n  online: {\n    background: '#1CED84',\n  },\n  ellipsis: {\n    color: '#95A7C4',\n    marginRight: 24,\n    opacity: 0.5,\n  },\n}));\n\nconst Header = ({ username, online }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.content}>\n        <Typography className={classes.username}>{username}</Typography>\n        <Box className={`${classes.statusDot} ${online && classes.online}`} />\n        <Typography className={classes.statusText}>\n          {online ? 'Online' : 'Offline'}\n        </Typography>\n      </Box>\n      <MoreHorizIcon classes={{ root: classes.ellipsis }} />\n    </Box>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { SenderBubble, OtherUserBubble } from '.';\nimport moment from 'moment';\n\nconst Messages = (props) => {\n  const { messages, otherUser, userId } = props;\n\n  return (\n    <Box>\n      {messages.map((message) => {\n        const time = moment(message.createdAt).format('h:mm');\n\n        return message.senderId === userId ? (\n          <SenderBubble key={message.id} text={message.text} time={time} />\n        ) : (\n          <OtherUserBubble\n            key={message.id}\n            text={message.text}\n            time={time}\n            otherUser={otherUser}\n          />\n        );\n      })}\n    </Box>\n  );\n};\n\nexport default Messages;\n","import { io } from 'socket.io-client';\n\nimport React from 'react';\n\nexport const socket = io(window.location.origin);\nsocket.on('connect', () => {\n  console.log('connected to server');\n});\nexport const SocketContext = React.createContext();\n","import React, { useCallback, useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, CssBaseline, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { SidebarContainer } from \"../components/Sidebar\";\nimport { ActiveChat } from \"../components/ActiveChat\";\nimport { SocketContext } from \"../context/socket\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n}));\n\nconst Home = ({ user, logout }) => {\n  const history = useHistory();\n\n  const socket = useContext(SocketContext);\n\n  const [conversations, setConversations] = useState([]);\n  const [activeConversation, setActiveConversation] = useState(null);\n\n  const classes = useStyles();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const addSearchedUsers = (users) => {\n    const currentUsers = {};\n\n    // make table of current users so we can lookup faster\n    conversations.forEach((convo) => {\n      currentUsers[convo.otherUser.id] = true;\n    });\n\n    const newState = [...conversations];\n    users.forEach((user) => {\n      // only create a fake convo if we don't already have a convo with this user\n      if (!currentUsers[user.id]) {\n        let fakeConvo = { otherUser: user, messages: [] };\n        newState.push(fakeConvo);\n      }\n    });\n\n    setConversations(newState);\n  };\n\n  const clearSearchedUsers = () => {\n    setConversations((prev) => prev.filter((convo) => convo.id));\n  };\n\n  const saveMessage = async (body) => {\n    const { data } = await axios.post(\"/api/messages\", body);\n    return data;\n  };\n\n  const sendMessage = (data, body) => {\n    socket.emit(\"new-message\", {\n      message: data.message,\n      recipientId: body.recipientId,\n      sender: data.sender,\n    });\n  };\n\n  const postMessage = (body) => {\n    try {\n      const data = saveMessage(body);\n\n      if (!body.conversationId) {\n        addNewConvo(body.recipientId, data.message);\n      } else {\n        addMessageToConversation(data);\n      }\n\n      sendMessage(data, body);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const addNewConvo = useCallback(\n    (recipientId, message) => {\n      conversations.forEach((convo) => {\n        if (convo.otherUser.id === recipientId) {\n          convo.messages.push(message);\n          convo.latestMessageText = message.text;\n          convo.id = message.conversationId;\n        }\n      });\n      setConversations(conversations);\n    },\n    [setConversations, conversations],\n  );\n\n  const addMessageToConversation = useCallback(\n    (data) => {\n      // if sender isn't null, that means the message needs to be put in a brand new convo\n      const { message, sender = null } = data;\n      if (sender !== null) {\n        const newConvo = {\n          id: message.conversationId,\n          otherUser: sender,\n          messages: [message],\n        };\n        newConvo.latestMessageText = message.text;\n        setConversations((prev) => [newConvo, ...prev]);\n      }\n\n      conversations.forEach((convo) => {\n        if (convo.id === message.conversationId) {\n          convo.messages.push(message);\n          convo.latestMessageText = message.text;\n        }\n      });\n      setConversations(conversations);\n    },\n    [setConversations, conversations],\n  );\n\n  const setActiveChat = (username) => {\n    setActiveConversation(username);\n  };\n\n  const addOnlineUser = useCallback((id) => {\n    setConversations((prev) =>\n      prev.map((convo) => {\n        if (convo.otherUser.id === id) {\n          const convoCopy = { ...convo };\n          convoCopy.otherUser = { ...convoCopy.otherUser, online: true };\n          return convoCopy;\n        } else {\n          return convo;\n        }\n      }),\n    );\n  }, []);\n\n  const removeOfflineUser = useCallback((id) => {\n    setConversations((prev) =>\n      prev.map((convo) => {\n        if (convo.otherUser.id === id) {\n          const convoCopy = { ...convo };\n          convoCopy.otherUser = { ...convoCopy.otherUser, online: false };\n          return convoCopy;\n        } else {\n          return convo;\n        }\n      }),\n    );\n  }, []);\n\n  // Lifecycle\n\n  useEffect(() => {\n    // Socket init\n    socket.on(\"add-online-user\", addOnlineUser);\n    socket.on(\"remove-offline-user\", removeOfflineUser);\n    socket.on(\"new-message\", addMessageToConversation);\n\n    return () => {\n      // before the component is destroyed\n      // unbind all event handlers used in this component\n      socket.off(\"add-online-user\", addOnlineUser);\n      socket.off(\"remove-offline-user\", removeOfflineUser);\n      socket.off(\"new-message\", addMessageToConversation);\n    };\n  }, [addMessageToConversation, addOnlineUser, removeOfflineUser, socket]);\n\n  useEffect(() => {\n    // when fetching, prevent redirect\n    if (user?.isFetching) return;\n\n    if (user && user.id) {\n      setIsLoggedIn(true);\n    } else {\n      // If we were previously logged in, redirect to login instead of register\n      if (isLoggedIn) history.push(\"/login\");\n      else history.push(\"/register\");\n    }\n  }, [user, history, isLoggedIn]);\n\n  useEffect(() => {\n    const fetchConversations = async () => {\n      try {\n        const { data } = await axios.get(\"/api/conversations\");\n        setConversations(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    if (!user.isFetching) {\n      fetchConversations();\n    }\n  }, [user]);\n\n  const handleLogout = async () => {\n    if (user && user.id) {\n      await logout(user.id);\n    }\n  };\n\n  return (\n    <>\n      <Button onClick={handleLogout}>Logout</Button>\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <SidebarContainer\n          conversations={conversations}\n          user={user}\n          clearSearchedUsers={clearSearchedUsers}\n          addSearchedUsers={addSearchedUsers}\n          setActiveChat={setActiveChat}\n        />\n        <ActiveChat\n          activeConversation={activeConversation}\n          conversations={conversations}\n          user={user}\n          postMessage={postMessage}\n        />\n      </Grid>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Button, Snackbar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Close from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n  snackbar: {\n    backgroundColor: \"red\",\n    fontWeight: \"bold\",\n  },\n  icon: {\n    color: \"white\",\n  },\n}));\n\nconst SnackbarError = ({ setSnackBarOpen, errorMessage, snackBarOpen }) => {\n  const classes = useStyles();\n  return (\n    <Snackbar\n      open={snackBarOpen}\n      onClose={() => setSnackBarOpen(false)}\n      message={errorMessage || \"Sorry, an error occured. Please try again\"}\n      action={\n        <React.Fragment>\n          <Button\n            className={classes.icon}\n            size=\"small\"\n            onClick={() => setSnackBarOpen(false)}\n          >\n            <Close color=\"secondary\" />\n          </Button>\n        </React.Fragment>\n      }\n      ContentProps={{\n        classes: {\n          root: classes.snackbar,\n        },\n      }}\n    />\n  );\n};\n\nexport default SnackbarError;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\n\nimport Signup from \"./Signup.js\";\nimport Login from \"./Login.js\";\nimport { SnackbarError, Home } from \"./components\";\nimport { SocketContext, socket } from \"./context/socket\";\n\nconst Routes = (props) => {\n  const [user, setUser] = useState({\n    isFetching: true,\n  });\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const login = async (credentials) => {\n    try {\n      const { data } = await axios.post(\"/auth/login\", credentials);\n      await localStorage.setItem(\"messenger-token\", data.token);\n      setUser(data);\n      socket.emit(\"go-online\", data.id);\n    } catch (error) {\n      console.error(error);\n      setUser({ error: error.response.data.error || \"Server Error\" });\n    }\n  };\n\n  const register = async (credentials) => {\n    try {\n      const { data } = await axios.post(\"/auth/register\", credentials);\n      await localStorage.setItem(\"messenger-token\", data.token);\n      setUser(data);\n      socket.emit(\"go-online\", data.id);\n    } catch (error) {\n      console.error(error);\n      setUser({ error: error.response.data.error || \"Server Error\" });\n    }\n  };\n\n  const logout = async (id) => {\n    try {\n      await axios.delete(\"/auth/logout\");\n      await localStorage.removeItem(\"messenger-token\");\n      setUser({});\n      socket.emit(\"logout\", id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Lifecycle\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      setUser((prev) => ({ ...prev, isFetching: true }));\n      try {\n        const { data } = await axios.get(\"/auth/user\");\n        setUser(data);\n        if (data.id) {\n          socket.emit(\"go-online\", data.id);\n        }\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setUser((prev) => ({ ...prev, isFetching: false }));\n      }\n    };\n\n    fetchUser();\n  }, []);\n\n  useEffect(() => {\n    if (user?.error) {\n      // check to make sure error is what we expect, in case we get an unexpected server error object\n      if (typeof user.error === \"string\") {\n        setErrorMessage(user.error);\n      } else {\n        setErrorMessage(\"Internal Server Error. Please try again\");\n      }\n      setSnackBarOpen(true);\n    }\n  }, [user?.error]);\n\n  if (user?.isFetching) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <SocketContext.Provider value={socket}>\n      {snackBarOpen && (\n        <SnackbarError\n          setSnackBarOpen={setSnackBarOpen}\n          errorMessage={errorMessage}\n          snackBarOpen={snackBarOpen}\n        />\n      )}\n      <Switch>\n        <Route\n          path=\"/login\"\n          render={() => <Login user={user} login={login} />}\n        />\n        <Route\n          path=\"/register\"\n          render={() => <Signup user={user} register={register} />}\n        />\n        <Route\n          exact\n          path=\"/\"\n          render={(props) =>\n            user?.id ? (\n              <Home user={user} logout={logout} />\n            ) : (\n              <Signup user={user} register={register} />\n            )\n          }\n        />\n        <Route\n          path=\"/home\"\n          render={() => <Home user={user} logout={logout} />}\n        />\n      </Switch>\n    </SocketContext.Provider>\n  );\n};\n\nexport default withRouter(Routes);\n","import React from 'react';\nimport { MuiThemeProvider } from '@material-ui/core';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { theme } from './themes/theme';\nimport Routes from './routes';\nimport axios from 'axios';\n\naxios.interceptors.request.use(async function (config) {\n  const token = await localStorage.getItem('messenger-token');\n  config.headers['x-access-token'] = token;\n\n  return config;\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}